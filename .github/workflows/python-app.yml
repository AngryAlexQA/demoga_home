name: Python Selenium Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    strategy:
      matrix:
        python-version: ['3.10', '3.11']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    permissions:
      checks: write
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium-browser \
          chromium-chromedriver \
          wget \
          unzip \
          xvfb

    - name: Install ChromeDriver
      run: |
        CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
        wget https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/bin/chromedriver
        sudo chown root:root /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install \
          pytest \
          selenium \
          webdriver-manager \
          allure-pytest \
          pytest-cov \
          pytest-xdist

    - name: Create directories
      run: |
        mkdir -p screenshots
        mkdir -p allure-results
        mkdir -p test-results

    - name: Run tests
      env:
        DISPLAY: :99
      run: |
        sudo Xvfb :99 & 
        pytest tests/ \
          -v \
          --tb=short \
          --alluredir=allure-results \
          --cov=./ \
          --cov-report=xml \
          --junitxml=test-results/test-results.xml \
          -n auto

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-artifacts-${{ matrix.python-version }}
        path: |
          screenshots/
          test-results/
          allure-results/
          coverage.xml
        retention-days: 5

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: test-results/test-results.xml
        check_name: "Test Results (Python ${{ matrix.python-version }})"
        comment_mode: "always"

    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@v1.7
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        allure_history: allure-history

    - name: Deploy Allure report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        publish_branch: gh-pages

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: always()
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.
